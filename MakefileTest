EXE = utest

SRCDIR = tst/
OBJDIR = bin/
LIBDIR = lib/

# external sources
EXT = $(LIBDIR)catch.hpp

# include directories
INC = $(LIBDIR) $(LIBDIR)AuD/inc/

# libraries
LIBS = libatlas.a $(LIBDIR)libaud.a

# source and object files
SRC = $(wildcard $(SRCDIR)*.cpp)
OBJ = $(patsubst $(SRCDIR)%.cpp, $(OBJDIR)%.opp, $(SRC))
DEP = $(patsubst $(SRCDIR)%.cpp, $(OBJDIR)%.dpp, $(SRC))

# C++ compiler and linker flags
CXX = g++
CXXFLAGS = -std=c++11 -Wall -Wextra -Werror $(INC:%=-I %)
LXXFLAGS =



# phnoy targets
.PHONY: clean destroy

clean:
	rm -rf $(EXE) $(OBJ) $(DEP)
	rmdir --ignore-fail-on-non-empty $(OBJDIR)

destroy: clean
	rm -rf $(LIBDIR)



# link executable
$(EXE): $(OBJ) $(LIBS)
	$(CXX) $(CXXFLAGS) $^ $(LXXFLAGS) -o $@

# .opp file
# $(LIBS) is needed for the header files
$(OBJDIR)%.opp: $(SRCDIR)%.cpp $(LIBS) $(EXT) | $(OBJDIR)
	$(CXX) $(CXXFLAGS) -c $< -o $@

-include $(DEP)

# .dpp file
$(OBJDIR)%.dpp: $(SRCDIR)%.cpp $(EXT) | $(OBJDIR)
	$(CXX) -MM $< -MT $(subst .dpp,.opp,$@) > $@

# folders
$(OBJDIR) $(LIBDIR):
	mkdir $@



# libraries and external sources
$(LIBDIR)catch.hpp: | $(LIBDIR)
	wget -q "https://raw.githubusercontent.com/philsquared/Catch/master/single_include/catch.hpp" -O $@

libatlas.a:
	$(MAKE) -f MakefileAtlas $@

$(LIBDIR)AuD/: | $(LIBDIR)
	git clone -q --single-branch "https://github.com/hmfrank/AuD/" $@

$(LIBDIR)libaud.a: $(LIBDIR)AuD/
	$(MAKE) -C $(LIBDIR)AuD/ all
	cp $(LIBDIR)AuD/libaud.a $@



