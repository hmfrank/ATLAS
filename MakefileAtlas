EXE = atlas
ARC = libatlas.a

SRCDIR = src/
OBJDIR = bin/
LIBDIR = lib/

# source and object files
SRC = $(wildcard $(SRCDIR)*.c)
OBJ = $(patsubst $(SRCDIR)%.c, $(OBJDIR)%.o, $(SRC))
DEP = $(patsubst $(SRCDIR)%.c, $(OBJDIR)%.d, $(SRC))

# include directories
INC = $(LIBDIR) $(LIBDIR)AuD/inc/

# libraries
LIBS = $(LIBDIR)libaud.a

# C compiler and linker flags
CC = gcc
CFLAGS = -std=c99 -Wall -Wextra -Werror $(INC:%=-I %) -D _GNU_SOURCE
LDFLAGS = -lm

# phony targets
.PHONY: clean destroy

clean:
	rm -rf $(EXE) $(ARC) $(OBJ) $(DEP)
	rmdir --ignore-fail-on-non-empty $(OBJDIR)

destroy: clean
	rm -rf $(LIBDIR)

# link executable
$(EXE): $(OBJ) $(LIBS)
	$(CC) $(CFLAGS) $^ $(LDFLAGS) -o $@

# create archive of object files
$(ARC): $(OBJ)
	ar -qc $@ $^

# .o file
# $(LIBS) is required for the header files
$(OBJDIR)%.o: $(SRCDIR)%.c $(LIBS) | $(OBJDIR)
	$(CC) $(CFLAGS) -c $< -o $@

-include $(DEP)

# .d file
$(OBJDIR)%.d: $(SRCDIR)%.c | $(OBJDIR)
	$(CC) -MM $< -MT $(subst .d,.o,$@) > $@

# folders
$(OBJDIR) $(LIBDIR):
	mkdir $@

# libraries
$(LIBDIR)AuD/: | $(LIBDIR)
	git clone -q --single-branch "https://github.com/hmfrank/AuD/" $@

$(LIBDIR)libaud.a: $(LIBDIR)AuD/
	$(MAKE) -C $(LIBDIR)AuD/ all
	cp $(LIBDIR)AuD/libaud.a $@

